name: Go Workflows
on:
  push:
    branches:
      - master
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - master
      - main

jobs:
  lint:
    name: golangci-lint
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      - name: Setup Go ToolChain
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491
        with:
          go-version-file: "./go.mod"
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@3cfe3a4abbb849e10058ce4af15d205b6da42804
        with:
          version: "latest"
          args: "--config=./.golangci.yml"

  coverage:
    name: code-coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      - name: Setup Go ToolChain
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491
        with:
          go-version-file: "./go.mod"
      - name: Calculate Code Coverage
        run: |
          make coverage
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@c16abc29c95fcf9174b58eb7e1abf4c866893bc8
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ${{ github.repository }}
          files: "./coverage/coverage.out"
          codecov_yml_path: "./.codecov.yml"

  build-and-analyze:
    name: codeql-analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
    - name: Checkout repository
      uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
    - name: Setup Go ToolChain
      uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491
      with:
        go-version-file: "./go.mod"
    - name: Initialize CodeQL
      uses: github/codeql-action/init@1b1aada464948af03b950897e5eb522f92603cc2
      with:
        languages: go
        build-mode: manual
    - name: Build App
      run: |
        make build
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@1b1aada464948af03b950897e5eb522f92603cc2
      with:
        category: "/language:go"

  build-container-image:
    permissions:
      contents: read
      actions: read
      packages: write
    env:
      REGISTRY: ghcr.io
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      - name: Extract metadata
        id: img-metadata
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
      - name: Login to Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true
      - name: Build and Push
        id: build-img
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.img-metadata.outputs.tags }}
          labels: ${{ steps.img-metadata.outputs.labels }}
          platforms: linux/amd64
      - name: Run Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@d710430a6722f083d3b36b8339ff66b32f22ee55
        with:
          image-ref: ${{ steps.build-img.outputs.imageid }}
          exit-code: "1"
          ignore-unfixed: true
          trivyignores: "./.trivyignore"
